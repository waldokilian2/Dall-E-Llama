{
  "name": "RAG Agent (Requires pre-ingestion)",
  "nodes": [
    {
      "parameters": {
        "formTitle": "RAG Ingestion",
        "formDescription": "Upload documents to ingest into Vector Store",
        "formFields": {
          "values": [
            {
              "fieldLabel": "File",
              "fieldType": "file",
              "acceptFileTypes": ".pdf",
              "requiredField": true
            }
          ]
        },
        "options": {
          "appendAttribution": false,
          "customCss": ":root {\n\t--font-family: 'Open Sans', sans-serif;\n\t--font-weight-normal: 400;\n\t--font-weight-bold: 600;\n\t--font-size-body: 12px;\n\t--font-size-label: 14px;\n\t--font-size-test-notice: 12px;\n\t--font-size-input: 14px;\n\t--font-size-header: 20px;\n\t--font-size-paragraph: 14px;\n\t--font-size-link: 12px;\n\t--font-size-error: 12px;\n\t--font-size-html-h1: 28px;\n\t--font-size-html-h2: 20px;\n\t--font-size-html-h3: 16px;\n\t--font-size-html-h4: 14px;\n\t--font-size-html-h5: 12px;\n\t--font-size-html-h6: 10px;\n\t--font-size-subheader: 14px;\n\n\t/* Colors */\n\t--color-background: #fbfcfe;\n\t--color-test-notice-text: #e6a23d;\n\t--color-test-notice-bg: #fefaf6;\n\t--color-test-notice-border: #f6dcb7;\n\t--color-card-bg: #ffffff;\n\t--color-card-border: #dbdfe7;\n\t--color-card-shadow: rgba(99, 77, 255, 0.06);\n\t--color-link: #7e8186;\n\t--color-header: #525356;\n\t--color-label: #555555;\n\t--color-input-border: #dbdfe7;\n\t--color-input-text: #71747A;\n\t--color-focus-border: rgb(90, 76, 194);\n\t--color-submit-btn-bg: #9403fc;\n\t--color-submit-btn-text: #ffffff;\n\t--color-error: #ea1f30;\n\t--color-required: #ff6d5a;\n\t--color-clear-button-bg: #7e8186;\n\t--color-html-text: #555;\n\t--color-html-link: #ff6d5a;\n\t--color-header-subtext: #7e8186;\n\n\t/* Border Radii */\n\t--border-radius-card: 8px;\n\t--border-radius-input: 6px;\n\t--border-radius-clear-btn: 50%;\n\t--card-border-radius: 8px;\n\n\t/* Spacing */\n\t--padding-container-top: 24px;\n\t--padding-card: 24px;\n\t--padding-test-notice-vertical: 12px;\n\t--padding-test-notice-horizontal: 24px;\n\t--margin-bottom-card: 16px;\n\t--padding-form-input: 12px;\n\t--card-padding: 24px;\n\t--card-margin-bottom: 16px;\n\n\t/* Dimensions */\n\t--container-width: 448px;\n\t--submit-btn-height: 48px;\n\t--checkbox-size: 18px;\n\n\t/* Others */\n\t--box-shadow-card: 0px 4px 16px 0px var(--color-card-shadow);\n\t--opacity-placeholder: 0.5;\n}"
        }
      },
      "id": "a00e5b5b-1cc1-4272-9790-8ffde3c92efb",
      "name": "On form submission",
      "type": "n8n-nodes-base.formTrigger",
      "position": [
        512,
        1376
      ],
      "webhookId": "4e1e20d4-f759-42c8-8439-87b93f43aa7c",
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "mode": "insert",
        "qdrantCollection": {
          "__rl": true,
          "mode": "id",
          "value": "rag_collection"
        },
        "options": {}
      },
      "id": "1218186e-a93e-4e05-b47e-a395f28cf5f9",
      "name": "Qdrant Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "position": [
        768,
        1376
      ],
      "typeVersion": 1.2,
      "credentials": {
        "qdrantApi": {
          "id": "HGWKVGDK5smvFh2f",
          "name": "QdrantApi account"
        }
      }
    },
    {
      "parameters": {
        "dataType": "binary",
        "options": {}
      },
      "id": "af14443b-ae01-48dc-8552-5ded7a27fce2",
      "name": "Default Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "position": [
        864,
        1600
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "chunkSize": 200,
        "chunkOverlap": 50,
        "options": {}
      },
      "id": "660380c5-63da-4404-98e6-f9c0ee9aaa90",
      "name": "Recursive Character Text Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "position": [
        944,
        1808
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "public": true,
        "mode": "webhook",
        "options": {}
      },
      "id": "45683271-af59-41d0-9e69-af721d566661",
      "name": "When chat message received",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "position": [
        512,
        640
      ],
      "webhookId": "5e56a263-3a40-44bd-bc9d-1cfb3bc2a87d",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "You are a helpful assistant. You have access to a tool to retrieve data from a semantic database to answer questions. \n* You can only answer the users query by using data from the tool.\n\n*If the tool has no data, state that data might need to be ingested into n8n."
        }
      },
      "id": "af562588-2e8c-4c0b-b041-d6fc8c0affd0",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        800,
        320
      ],
      "typeVersion": 2
    },
    {
      "parameters": {},
      "id": "de87b7bb-6fec-4d8f-a77a-25bc3a30a038",
      "name": "Simple Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "position": [
        864,
        544
      ],
      "typeVersion": 1.3
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        736,
        544
      ],
      "id": "5e95c811-1177-4df3-8ee1-406976958931",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "Ok9Oid7izeTFUqEY",
          "name": "Hackathon"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
      "typeVersion": 1,
      "position": [
        736,
        1600
      ],
      "id": "35390c08-a3b8-42b9-bd35-95f488d3ee22",
      "name": "Embeddings Google Gemini",
      "credentials": {
        "googlePalmApi": {
          "id": "Ok9Oid7izeTFUqEY",
          "name": "Hackathon"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
      "typeVersion": 1,
      "position": [
        976,
        960
      ],
      "id": "14377d6f-0997-4948-b810-7d32a4414aef",
      "name": "Embeddings Google Gemini1",
      "credentials": {
        "googlePalmApi": {
          "id": "Ok9Oid7izeTFUqEY",
          "name": "Hackathon"
        }
      }
    },
    {
      "parameters": {
        "description": "The knowledge base to answer user questions. No answers can be given if it is not in this data."
      },
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1.1,
      "position": [
        992,
        544
      ],
      "id": "0c9f2770-b826-4542-8077-77f5dc3b4019",
      "name": "Answer questions with a vector store"
    },
    {
      "parameters": {
        "qdrantCollection": {
          "__rl": true,
          "value": "rag_collection",
          "mode": "list",
          "cachedResultName": "rag_collection"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "typeVersion": 1.3,
      "position": [
        896,
        752
      ],
      "id": "bd1d5ed6-d3e6-4b3d-b97f-0fbfef7e9301",
      "name": "Qdrant Vector Store2",
      "credentials": {
        "qdrantApi": {
          "id": "HGWKVGDK5smvFh2f",
          "name": "QdrantApi account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1184,
        752
      ],
      "id": "6a641134-c686-446b-b526-46e80a315524",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "Ok9Oid7izeTFUqEY",
          "name": "Hackathon"
        }
      }
    },
    {
      "parameters": {
        "content": "A Retrieval-Augmented Generation (RAG) agent tool combines a vector search retriever with a language model to deliver more accurate and context-aware responses. When a query is received, the agent retrieves relevant documents or knowledge snippets from a connected data source (e.g., database, API, or vector store) and feeds them into the language model to ground its answer. This approach reduces hallucinations, ensures answers are based on factual context, and allows the agent to dynamically leverage external knowledge beyond its pre-trained model."
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        528,
        960
      ],
      "id": "dadee2cc-f487-4476-abe1-f3888c540cb3",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash-lite-preview-06-17",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1456,
        1008
      ],
      "id": "020d421f-4358-40ce-bc80-3b3794bffc16",
      "name": "Google Gemini Chat Model2",
      "credentials": {
        "googlePalmApi": {
          "id": "Ok9Oid7izeTFUqEY",
          "name": "Hackathon"
        }
      }
    },
    {
      "parameters": {
        "text": "={{ $json.output }}",
        "schemaType": "fromJson",
        "jsonSchemaExample": "{\n  \"suggestedActions\": [\n    \"action 1\",\n    \"action 2\",\n    \"action 3\"\n  ]\n}",
        "options": {
          "systemPromptTemplate": "=You provide follow-up questions in plain text.\n\nRules *IMPORTANT*:\n\n* Return follow-up questions.\n\n* Keep each question under 5 words.\n\n* Always return 3 values"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1.2,
      "position": [
        1392,
        784
      ],
      "id": "b9c4c98b-e3ff-41d0-9fc4-81d3b6af5431",
      "name": "Information Extractor"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9378efb7-a48a-41fa-895d-4dce3eb035cf",
              "name": "message",
              "value": "={{ typeof $json.output === \"string\" ? $json.output : JSON.stringify($json.output) }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1456,
        496
      ],
      "id": "f6543943-449b-4760-b7da-1fcdfc0018e4",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c8e845f0-9630-4ed8-b1b1-f553e507c173",
              "name": "message",
              "value": "={{ $json.message }}",
              "type": "string"
            },
            {
              "id": "5fbb58a5-08d2-4e6f-916e-44ad285b9a10",
              "name": "suggestedActions",
              "value": "={{ $json.output.suggestedActions }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1968,
        640
      ],
      "id": "e81ed7ec-f512-4747-97ef-9b330c20d664",
      "name": "Edit Fields1",
      "executeOnce": true
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        1744,
        640
      ],
      "id": "8ce1df32-b468-404c-8f40-da89b9356374",
      "name": "Merge"
    }
  ],
  "pinData": {},
  "connections": {
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "On form submission": {
      "main": [
        [
          {
            "node": "Qdrant Vector Store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Qdrant Vector Store",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Google Gemini": {
      "ai_embedding": [
        [
          {
            "node": "Qdrant Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Google Gemini1": {
      "ai_embedding": [
        [
          {
            "node": "Qdrant Vector Store2",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Answer questions with a vector store": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Qdrant Vector Store2": {
      "ai_vectorStore": [
        [
          {
            "node": "Answer questions with a vector store",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Answer questions with a vector store",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          },
          {
            "node": "Information Extractor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Information Extractor",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Information Extractor": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "24cbb5e2-c425-4298-bea5-3fde263cb5e5",
  "meta": {
    "templateId": "5148",
    "templateCredsSetupCompleted": true,
    "instanceId": "143d5f99dea025dc67ba49da3fb636832933424ddc2449b949ffbc40bb019c11"
  },
  "id": "mXBhpVSZWYwTWRCG",
  "tags": [
    {
      "createdAt": "2025-08-22T15:55:34.834Z",
      "updatedAt": "2025-08-22T15:55:34.834Z",
      "id": "uMQCO2ABi1t5BlTH",
      "name": "HACK"
    }
  ]
}