{
  "name": "Github Explorer",
  "nodes": [
    {
      "parameters": {
        "public": true,
        "mode": "webhook",
        "options": {
          "responseMode": "lastNode"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.3,
      "position": [
        -1152,
        16
      ],
      "id": "96bf7388-8801-4106-8de8-2a7726bcd28d",
      "name": "When chat message received",
      "webhookId": "69bbeb1a-12fa-46fe-be1a-2d14c8755c74"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('When chat message received').item.json.chatInput }}",
        "options": {
          "systemMessage": "You are a validation agent.  \nYour only job is to check whether the user provides a GitHub repository URL in the exact format:\n\nhttps://github.com/OWNER/REPO\n\nRules:\n- OWNER must be a valid GitHub username or organization (alphanumeric plus hyphens, no spaces).\n- REPO must be a valid repository name (alphanumeric, underscores, hyphens, and periods are allowed).\n- No trailing slashes.\n- Do not accept extra paths (e.g., /issues, /pulls, /tree/main).\n- Do not accept .git suffixes.\n- Do not accept shortened, SSH, or http (must be https).\n\nBehavior:\n- If the input is valid, confirm success and return the URL exactly as provided.\n- If the input is invalid, respond with:\n  \"Invalid input. Please provide a GitHub repository URL.\n- If the user adds any other text, simply return only the GitHub repository URL\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -432,
        320
      ],
      "id": "5d9f76e1-3dbb-4677-ab6c-defd00d1a898",
      "name": "AI Agent",
      "retryOnFail": false
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash-lite",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -416,
        544
      ],
      "id": "d226037b-085d-4c5d-a586-54306755b3b8",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "Ok9Oid7izeTFUqEY",
          "name": "Hackathon"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -288,
        544
      ],
      "id": "8680233b-2aa7-4359-8e70-a86b8e7a2bb9",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Input from previous node (replace \"github_url\" with your field name)\nconst url = $json.output;\n\n// Validate format: https://github.com/OWNER/REPO\nconst regex = /^https:\\/\\/github\\.com\\/([^/]+)\\/([^/]+)$/;\nconst match = regex.exec(url);\n\nif (!match) {\n  return {}\n}\n\nconst owner = match[1];\nconst repo = match[2];\n\n// Construct new URL\nconst gitmcpUrl = `https://gitmcp.io/${owner}/${repo}`;\n\n// Return as output for next node\nreturn { endpoint: gitmcpUrl };\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        48,
        320
      ],
      "id": "c46e42d8-9257-445c-bc9b-4fbdde404c4f",
      "name": "Code"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -480,
        -64
      ],
      "id": "36a08b83-efdb-47e5-87d3-b89c6b4793fe",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "Ok9Oid7izeTFUqEY",
          "name": "Hackathon"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -352,
        -64
      ],
      "id": "70791669-6a4a-4591-a3f1-ab6255b28bed",
      "name": "Simple Memory1"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"message\": \"Ready to answer any questions about  {{ $json.endpoint }}\",\n  \"suggestedActions\": [\n    \"What documentation do you have on  {{ $json.endpoint }}\",\n    \"Can you give me an overview of the code in  {{ $json.endpoint }}\"\n  ]\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        784,
        208
      ],
      "id": "0e8e7099-aafa-4a98-bf16-30dc016d09f8",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "{\n  \"message\": \"Please provide me with a valid GitHub URL\",\n  \"suggestedActions\": [\n    \"Github URL: \"\n  ]\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        560,
        416
      ],
      "id": "72b32e09-fa70-4be1-835b-c117b555209d",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "42c2c6d4-dc49-44a8-b9be-3b10c80a5a22",
              "leftValue": "={{ $json.endpoint }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        336,
        320
      ],
      "id": "0756ae09-60a0-40ea-9b88-ee5530702d45",
      "name": "If Successful"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "5dc4be9c-bc05-428b-b774-2b86d466bcff",
              "leftValue": "={{ $json.value }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -704,
        16
      ],
      "id": "5acab2dc-a186-4378-a785-70ebdcae46fa",
      "name": "If Endpoint Exists"
    },
    {
      "parameters": {
        "operation": "get",
        "keyName": "={{ $json.sessionId }}"
      },
      "type": "n8n-nodes-datastore.datastore",
      "typeVersion": 1,
      "position": [
        -928,
        16
      ],
      "id": "1d510625-3f34-4fa9-bc68-da418ff60643",
      "name": "Datastore"
    },
    {
      "parameters": {
        "keyName": "={{ $('When chat message received').item.json.sessionId }}",
        "valueString": "={{ $json.endpoint }}"
      },
      "type": "n8n-nodes-datastore.datastore",
      "typeVersion": 1,
      "position": [
        560,
        208
      ],
      "id": "ca7491df-e1b0-4f7d-8901-1c3e6db3e3da",
      "name": "Datastore1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('When chat message received').item.json.chatInput }}",
        "options": {
          "systemMessage": "You are an AI assistant with access to an MCP server called GitHub MCP.\nGitHub MCP provides tools that allow you to interact with GitHub. Ensure that you use these tools to answer the users questions."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -432,
        -288
      ],
      "id": "e69c28a6-7973-4693-8228-aa8badb47034",
      "name": "Ai Expert"
    },
    {
      "parameters": {
        "endpointUrl": "={{ $('Datastore').item.json.value }}"
      },
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "typeVersion": 1.1,
      "position": [
        -224,
        -64
      ],
      "id": "75af5914-7ca2-4963-981f-b9b1adf8b80d",
      "name": "Github MCP"
    },
    {
      "parameters": {
        "content": "A GitHub agent that lets you query any public repository. Ask questions about documentation, code, or project structure, and the agent retrieves answers directly from the repo.",
        "height": 128,
        "width": 304
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -928,
        -224
      ],
      "id": "531fb676-84e6-439c-a6c9-2cbd4c8e25f1",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash-lite-preview-06-17",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        64,
        80
      ],
      "id": "6a85ce00-4d85-4db5-aef1-6d472c60b192",
      "name": "Google Gemini Chat Model2",
      "credentials": {
        "googlePalmApi": {
          "id": "Ok9Oid7izeTFUqEY",
          "name": "Hackathon"
        }
      }
    },
    {
      "parameters": {
        "text": "={{ $json.output }}",
        "schemaType": "fromJson",
        "jsonSchemaExample": "{\n  \"suggestedActions\": [\n    \"action 1\",\n    \"action 2\",\n    \"action 3\"\n  ]\n}",
        "options": {
          "systemPromptTemplate": "=You provide suggested answers to questions you received or follow-up questions in plain text.\n\nRules *IMPORTANT*:\n\n* Return suggested answers to questions or follow-up questions.\n\n* Keep each answer or question under 5 words.\n\n* Always return 3 values"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1.2,
      "position": [
        -16,
        -144
      ],
      "id": "abfd5b86-3fc9-4833-8be1-e2a1b3db3f4d",
      "name": "Information Extractor"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9378efb7-a48a-41fa-895d-4dce3eb035cf",
              "name": "message",
              "value": "={{ typeof $json.output === \"string\" ? $json.output : JSON.stringify($json.output) }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        48,
        -336
      ],
      "id": "9c2e4710-9ded-421a-9444-dffd5c32a64f",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        336,
        -192
      ],
      "id": "3048c069-054f-43a3-8f72-dee189ce315b",
      "name": "Merge"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c8e845f0-9630-4ed8-b1b1-f553e507c173",
              "name": "message",
              "value": "={{ $json.message }}",
              "type": "string"
            },
            {
              "id": "5fbb58a5-08d2-4e6f-916e-44ad285b9a10",
              "name": "suggestedActions",
              "value": "={{ $json.output.suggestedActions }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        560,
        -192
      ],
      "id": "945a1bea-3604-4a6f-a78d-e766a2705343",
      "name": "Edit Fields3",
      "executeOnce": false
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "Datastore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "If Successful",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Ai Expert",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory1": {
      "ai_memory": [
        [
          {
            "node": "Ai Expert",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "If Successful": {
      "main": [
        [
          {
            "node": "Datastore1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Endpoint Exists": {
      "main": [
        [
          {
            "node": "Ai Expert",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        []
      ]
    },
    "Datastore": {
      "main": [
        [
          {
            "node": "If Endpoint Exists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Datastore1": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Github MCP": {
      "ai_tool": [
        [
          {
            "node": "Ai Expert",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Ai Expert": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          },
          {
            "node": "Information Extractor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Information Extractor",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Information Extractor": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "f8f94639-64eb-49d2-a9ed-ac9749c36acc",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "143d5f99dea025dc67ba49da3fb636832933424ddc2449b949ffbc40bb019c11"
  },
  "id": "fgelmoCoq30ql0u5",
  "tags": [
    {
      "createdAt": "2025-08-22T15:55:34.834Z",
      "updatedAt": "2025-08-22T15:55:34.834Z",
      "id": "uMQCO2ABi1t5BlTH",
      "name": "HACK"
    }
  ]
}